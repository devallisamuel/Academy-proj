{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\support\\\\Desktop\\\\xtm\\\\src\\\\components\\\\nestedRoutes\\\\transHistory.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport Container from '@mui/material/Container';\nimport { Typography } from '@mui/material'; // import { Button } from '@mui/material';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport CircularIndeterminate from \"../UI/Spinner\"; // import background from '../../assets/Jemeelah2-1.svg';\n// import Paginations from \"../UI/Pagination\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const History = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const user = useSelector(state => state.reducer[0]); // const [currentPage, setCurrentPage] = useState(1);\n  // const [postsPerPage] = useState(20);\n\n  const navigate = useNavigate();\n  console.log(user);\n  useEffect(() => {\n    if (window.location.pathname === '/welcome/multiple' && user.length === 0) {\n      return navigate('/');\n    }\n\n    async function getData() {\n      let getTransactionDetails = await axios.get(`https://xmtapi.azurewebsites.net/Transaction/get-transaction-groups/${user.accountNumber}`).then(response => setData(response.data)).catch(err => console.log(err, 'error caught during post of account number '));\n      console.log(getTransactionDetails);\n      console.log(data);\n    }\n\n    getData();\n  }, []); // if (data.length === 0)   {\n  //     return (<div style ={{position:'absolute', top:'50%', left:'50%'}}>\n  //             <CircularIndeterminate/>\n  //         </div>);\n  // }\n\n  const dateTime = params => {\n    let arr = params.split('T');\n    let arr2 = arr[1].split('.');\n    let time = '';\n    let conv = arr2[0].split(':');\n\n    if (conv[0] < 12) {\n      time = 'AM';\n    } else {\n      time = 'PM';\n    }\n\n    return `${arr[0]}  ${arr2[0]} ${time}`;\n  };\n\n  const rows = [];\n\n  function Post(posts) {\n    console.log(posts, 'this is your data');\n\n    for (let i = 0; i <= posts.length - 1; i++) {\n      for (let j = 0; j <= posts[i].transactions.length - 1; j++) {\n        let row = /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: posts[i].transactions[j].bank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: posts[i].transactions[j].receiverAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: posts[i].transactions[j].transactionAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: dateTime(posts[i].transactions[j].transactionDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: posts[i].transactionGroupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: posts[i].transactions[j].transactionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 28\n          }, this)]\n        }, posts[i].transactions[j].transactionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this);\n\n        rows.push(row);\n      }\n    }\n\n    return rows.map(val => val);\n  } // const indexOfLastPost = currentPage * postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\n  // const paginate = pageNumber => setCurrentPage(pageNumber + 1);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"primary\",\n        style: {\n          marginLeft: 90,\n          marginTop: 100,\n          fontSize: 20\n        },\n        children: \"Transfer Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        style: {\n          marginLeft: 100,\n          marginTop: 50\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            width: '1000px'\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Ref ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Post(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(History, \"2w+7Obl4k8pqoThp7TPo5ee6e+U=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/components/nestedRoutes/transHistory.js"],"names":["useEffect","useState","axios","useSelector","useNavigate","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","CircularIndeterminate","History","data","setData","user","state","reducer","navigate","console","log","window","location","pathname","length","getData","getTransactionDetails","get","accountNumber","then","response","catch","err","dateTime","params","arr","split","arr2","time","conv","rows","Post","posts","i","j","transactions","row","border","bank","receiverAccount","transactionAmount","transactionDate","transactionGroupName","transactionId","push","map","val","marginLeft","marginTop","fontSize","width","display","justifyContent","margin"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Container from '@mui/material/Container';\r\nimport {Typography } from '@mui/material';\r\n// import { Button } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport CircularIndeterminate from \"../UI/Spinner\";\r\n// import background from '../../assets/Jemeelah2-1.svg';\r\n// import Paginations from \"../UI/Pagination\";\r\n\r\nexport const History = () => {\r\n    const [data, setData ] = useState([]);\r\n    const user = useSelector(state => state.reducer[0]);\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    // const [postsPerPage] = useState(20);\r\n\r\n     \r\n    const navigate = useNavigate();\r\n    console.log(user);\r\n\r\n    useEffect(() => {\r\n        \r\n    if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n        return navigate('/');\r\n    }\r\n    async  function getData () {\r\n        let getTransactionDetails = await axios.get(`https://xmtapi.azurewebsites.net/Transaction/get-transaction-groups/${user.accountNumber}`).then(response => setData(response.data)).catch(err => console.log(err, 'error caught during post of account number '));\r\n        console.log(getTransactionDetails);\r\n        console.log(data);\r\n    }\r\n    getData();\r\n\r\n    }, []);\r\n\r\n    // if (data.length === 0)   {\r\n    //     return (<div style ={{position:'absolute', top:'50%', left:'50%'}}>\r\n    //             <CircularIndeterminate/>\r\n    //         </div>);\r\n    // }\r\n    const dateTime = (params) => {\r\n        let arr =  params.split('T');\r\n        let arr2 = arr[1].split('.');\r\n        let time = '';\r\n        let conv = arr2[0].split(':')\r\n        if(conv[0] < 12)  {\r\n            time = 'AM';\r\n        }else {\r\n            time = 'PM';\r\n        }\r\n        return `${arr[0]}  ${arr2[0]} ${time}`;\r\n    }\r\n     const rows = []\r\n    function Post (posts) {\r\n        console.log(posts, 'this is your data');\r\n            for(let i = 0; i <= posts.length-1; i++) {\r\n                for (let j = 0; j <= posts[i].transactions.length-1; j++) {\r\n                      let row =(<TableRow\r\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        key = {posts[i].transactions[j].transactionId}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {posts[i].transactions[j].bank}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{posts[i].transactions[j].receiverAccount}</TableCell>\r\n                            <TableCell align=\"left\">{posts[i].transactions[j].transactionAmount}</TableCell>\r\n                            <TableCell align=\"left\">{dateTime(posts[i].transactions[j].transactionDate)}</TableCell>\r\n                            <TableCell align=\"left\">{posts[i].transactionGroupName}</TableCell>\r\n                            \r\n                           <TableCell align=\"left\">{(posts[i].transactions[j].transactionId)}</TableCell>\r\n                        </TableRow>);\r\n                        rows.push(row)\r\n                }\r\n            }\r\n            return rows.map(val => val);\r\n    }\r\n    // const indexOfLastPost = currentPage * postsPerPage;\r\n    // const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n    // const paginate = pageNumber => setCurrentPage(pageNumber + 1);\r\n    return (<>\r\n            {/* <div\r\n                    style = {{backgroundImage:`url(${background})`,\r\n                    height:'100vh',\r\n                    width:'100%',\r\n                    overflowX:'hidden',\r\n                    backgroundPosition:'center',\r\n                    backgroundSize:'cover',\r\n                    }}> */}\r\n            <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:100, fontSize:20}}>Transfer Details</Typography>\r\n            </Container>\r\n            <Container>\r\n                    <TableContainer style =  {{marginLeft: 100, marginTop:50}} >\r\n                        <Table sx={{ width: '1000px' }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Bank</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Amount</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Group</TableCell>\r\n                                    <TableCell>Ref ID</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                             <TableBody>\r\n                                 {Post(data)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n                <Container style = {{display:'flex', justifyContent:'center', margin:20}}>\r\n                    {/* <Paginations  style =  {{marginLeft: 90, marginTop:100, fontSize:20}} postsPerPage={postsPerPage} totalPosts={data.length} paginate = {paginate} /> */}\r\n            </Container>\r\n            {/* </div> */}\r\n        </>);\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}