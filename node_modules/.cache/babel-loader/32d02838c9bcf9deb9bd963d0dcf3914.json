{"ast":null,"code":"import { takeLatest, call } from \"redux-saga/effects\";\nimport { LOGIN_ACTION, LOGIN_ACTION_SUCCESS } from \"../redux/action/action\";\nexport const mySaga = function* () {\n  yield takeLatest(LOGIN_ACTION, logInWatcher);\n};\n\nfunction* logInWatcher(action) {\n  yield call(apiFecther, action);\n}\n\nconst apiFecther = action => {\n  console.log(action.payload);\n  console.log(JSON.stringify(action.payload));\n  return fetch('https://localhost:44322/Customers/login', {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: \"POST\",\n    body: JSON.stringify(action.payload)\n  }).then(response => console.log(response)).catch(e => console.error(e, 'i caught the error'));\n};","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/saga/mySaga.js"],"names":["takeLatest","call","LOGIN_ACTION","LOGIN_ACTION_SUCCESS","mySaga","logInWatcher","action","apiFecther","console","log","payload","JSON","stringify","fetch","headers","method","body","then","response","catch","e","error"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,wBAAnD;AACA,OAAO,MAAMC,MAAM,GAAG,aAAa;AAC/B,QAAMJ,UAAU,CAACE,YAAD,EAAcG,YAAd,CAAhB;AACH,CAFM;;AAGP,UAAUA,YAAV,CAAwBC,MAAxB,EAAgC;AAC5B,QAAML,IAAI,CAACM,UAAD,EAAYD,MAAZ,CAAV;AACH;;AACD,MAAMC,UAAU,GAAID,MAAD,IAAY;AAC3BE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACI,OAAtB,CAAZ;AACD,SAAOG,KAAK,CAAC,yCAAD,EAA2C;AACtDC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAD6C;AAKtDC,IAAAA,MAAM,EAAE,MAL8C;AAMtDC,IAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACI,OAAtB;AANgD,GAA3C,CAAL,CAOPO,IAPO,CAOFC,QAAQ,IAAIV,OAAO,CAACC,GAAR,CAAYS,QAAZ,CAPV,EAOiCC,KAPjC,CAOuCC,CAAC,IAAIZ,OAAO,CAACa,KAAR,CAAcD,CAAd,EAAgB,oBAAhB,CAP5C,CAAP;AAQF,CAXD","sourcesContent":["import { takeLatest,call } from \"redux-saga/effects\"\r\nimport { LOGIN_ACTION, LOGIN_ACTION_SUCCESS } from \"../redux/action/action\"\r\nexport const mySaga = function* () {\r\n    yield takeLatest(LOGIN_ACTION,logInWatcher);\r\n}\r\nfunction* logInWatcher (action) {\r\n    yield call(apiFecther,action);\r\n}\r\nconst apiFecther = (action) => {\r\n    console.log(action.payload);\r\n    console.log(JSON.stringify(action.payload));\r\n   return fetch('https://localhost:44322/Customers/login',{\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify(action.payload)\r\n}).then(response => console.log(response)).catch(e => console.error(e,'i caught the error'));\r\n}"]},"metadata":{},"sourceType":"module"}