{"ast":null,"code":"import{applyMiddleware,compose,createStore}from\"redux\";import createSagaMiddleware from\"@redux-saga/core\";import{rootSaga}from\"../../saga/rootSaga\";import{reducers}from\"../reducer\";import{sessionService}from'redux-react-session';export var configStore=function configStore(initialState){var sagaMidddleware=createSagaMiddleware();var composeEnhancer=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var middleware=[sagaMidddleware];var store=createStore(reducers,initialState,composeEnhancer(applyMiddleware.apply(void 0,middleware)));sessionService.initSessionService(store,{refreshOnCheckAuth:true,driver:'LOCALSTORAGE'});sagaMidddleware.run(rootSaga);return store;};","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/redux/store/store.js"],"names":["applyMiddleware","compose","createStore","createSagaMiddleware","rootSaga","reducers","sessionService","configStore","initialState","sagaMidddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","store","initSessionService","refreshOnCheckAuth","driver","run"],"mappings":"AAAA,OAASA,eAAT,CAAyBC,OAAzB,CAAiCC,WAAjC,KAAoD,OAApD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kBAAjC,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,cAAT,KAA+B,qBAA/B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,YAAD,CAAkB,CACzC,GAAMC,CAAAA,eAAe,CAAGN,oBAAoB,EAA5C,CACA,GAAMO,CAAAA,eAAe,CAAGC,MAAM,CAACC,oCAAP,EAA+CX,OAAvE,CACA,GAAMY,CAAAA,UAAU,CAAG,CAACJ,eAAD,CAAnB,CACA,GAAMK,CAAAA,KAAK,CAAGZ,WAAW,CAACG,QAAD,CACbG,YADa,CAEbE,eAAe,CAACV,eAAe,MAAf,QAAmBa,UAAnB,CAAD,CAFF,CAAzB,CAGAP,cAAc,CAACS,kBAAf,CAAkCD,KAAlC,CAAyC,CAACE,kBAAkB,CAAE,IAArB,CAA2BC,MAAM,CAAC,cAAlC,CAAzC,EACAR,eAAe,CAACS,GAAhB,CAAoBd,QAApB,EACA,MAAOU,CAAAA,KAAP,CACH,CAVM","sourcesContent":["import { applyMiddleware,compose,createStore } from \"redux\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\nimport { rootSaga } from \"../../saga/rootSaga\";\r\nimport { reducers } from \"../reducer\";\r\nimport { sessionService } from 'redux-react-session';\r\n\r\nexport const configStore = (initialState) => {\r\n    const sagaMidddleware = createSagaMiddleware();\r\n    const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    const middleware = [sagaMidddleware];\r\n    const store = createStore(reducers,\r\n                initialState,\r\n                composeEnhancer(applyMiddleware(...middleware)));\r\n    sessionService.initSessionService(store, {refreshOnCheckAuth: true, driver:'LOCALSTORAGE'});\r\n    sagaMidddleware.run(rootSaga);\r\n    return store;\r\n}"]},"metadata":{},"sourceType":"module"}