{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\support\\\\Desktop\\\\xtm\\\\src\\\\components\\\\nestedRoutes\\\\transHistory.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport Container from '@mui/material/Container';\nimport { Typography } from '@mui/material';\nimport { Button } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport CircularIndeterminate from \"../UI/Spinner\"; // import background from '../../assets/Jemeelah2-1.svg';\n// import Paginations from \"../UI/Pagination\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const History = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const user = useSelector(state => state.reducer[0]); // const [currentPage, setCurrentPage] = useState(1);\n  // const [postsPerPage] = useState(20);\n\n  const navigate = useNavigate();\n  console.log(user);\n  useEffect(() => {\n    if (window.location.pathname === '/welcome/multiple' && user.length === 0) {\n      return navigate('/');\n    }\n\n    async function getData() {\n      let getTransactionDetails = await axios.get(`https://xmtapi.azurewebsites.net/Transaction/get-transaction-groups/${user.accountNumber}`).then(response => setData(response.data)).catch(err => console.log(err, 'error caught during post of account number '));\n      console.log(getTransactionDetails);\n      console.log(data);\n    }\n\n    getData();\n  }, []);\n\n  if (data.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularIndeterminate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  } // const indexOfLastPost = currentPage * postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\n  // const paginate = pageNumber => setCurrentPage(pageNumber + 1);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"primary\",\n        style: {\n          marginLeft: 90,\n          marginTop: 100,\n          fontSize: 20\n        },\n        children: \"Transfer Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        style: {\n          marginLeft: 100,\n          marginTop: 50\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            width: '1000px'\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Transaction Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Ref ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Post(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(History, \"2w+7Obl4k8pqoThp7TPo5ee6e+U=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = History;\n\nconst dateTime = params => {\n  let arr = params.split('T');\n  let arr2 = arr[1].split('.');\n  let time = '';\n  let conv = arr2[0].split(':');\n\n  if (conv[0] < 12) {\n    time = 'AM';\n  } else {\n    time = 'PM';\n  }\n\n  return `${arr[0]}  ${arr2[0]} ${time}`;\n};\n\nfunction Post(posts) {\n  for (let group = 0; group < posts.length; group++) {\n    for (let i = 0; i < group.transactions.length; i++) {\n      console.log(i.receiverAccount);\n\n      /*#__PURE__*/\n      _jsxDEV(TableRow, {\n        sx: {\n          '&:last-child td, &:last-child th': {\n            border: 0\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this);\n    } //  (group.transaction.map((val,key) => \n    //     <TableRow\n    //     sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n    //     key = {key}>\n    //         <TableCell component=\"th\" scope=\"row\">\n    //             {key+1}\n    //         </TableCell>\n    //         <TableCell align=\"left\">{val.receiverAccount}</TableCell>\n    //         <TableCell align=\"left\">{val.transactionAmount}</TableCell>\n    //         <TableCell align=\"left\">{group.transactionGroupName}</TableCell>\n    //         {/* <TableCell align=\"left\">{dateTime(val.transactionDate)}</TableCell> */}\n    //         <TableCell align=\"left\">{(val.transactionType)}</TableCell>\n    //         <TableCell align=\"left\">{(val.transactionId)}</TableCell>\n    //     </TableRow>\n    //     ) );\n\n  }\n}\n\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"History\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/components/nestedRoutes/transHistory.js"],"names":["useEffect","useState","axios","useSelector","useNavigate","Container","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","CircularIndeterminate","History","data","setData","user","state","reducer","navigate","console","log","window","location","pathname","length","getData","getTransactionDetails","get","accountNumber","then","response","catch","err","position","top","left","marginLeft","marginTop","fontSize","width","Post","display","justifyContent","margin","dateTime","params","arr","split","arr2","time","conv","posts","group","i","transactions","receiverAccount","border"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Container from '@mui/material/Container';\r\nimport {Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport CircularIndeterminate from \"../UI/Spinner\";\r\n// import background from '../../assets/Jemeelah2-1.svg';\r\n// import Paginations from \"../UI/Pagination\";\r\n\r\nexport const History = () => {\r\n    const [data, setData ] = useState([]);\r\n    const user = useSelector(state => state.reducer[0]);\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    // const [postsPerPage] = useState(20);\r\n\r\n     \r\n    const navigate = useNavigate();\r\n    console.log(user);\r\n\r\n    useEffect(() => {\r\n        \r\n    if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n        return navigate('/');\r\n    }\r\n    async  function getData () {\r\n        let getTransactionDetails = await axios.get(`https://xmtapi.azurewebsites.net/Transaction/get-transaction-groups/${user.accountNumber}`).then(response =>setData(response.data)).catch(err => console.log(err, 'error caught during post of account number '));\r\n        console.log(getTransactionDetails);\r\n        console.log(data);\r\n    }\r\n    getData();\r\n\r\n    }, []);\r\n\r\n    if (data.length)   {\r\n        return (<div style ={{position:'absolute', top:'50%', left:'50%'}}>\r\n                <CircularIndeterminate/>\r\n            </div>);\r\n    }\r\n    // const indexOfLastPost = currentPage * postsPerPage;\r\n    // const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n    // const paginate = pageNumber => setCurrentPage(pageNumber + 1);\r\n    return (<>\r\n            {/* <div\r\n                    style = {{backgroundImage:`url(${background})`,\r\n                    height:'100vh',\r\n                    width:'100%',\r\n                    overflowX:'hidden',\r\n                    backgroundPosition:'center',\r\n                    backgroundSize:'cover',\r\n                    }}> */}\r\n            <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:100, fontSize:20}}>Transfer Details</Typography>\r\n            </Container>\r\n            <Container>\r\n                    <TableContainer style =  {{marginLeft: 100, marginTop:50}} >\r\n                        <Table sx={{ width: '1000px' }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Serial Number</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Amount</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Transaction Type</TableCell>\r\n                                    <TableCell>Ref ID</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                             <TableBody>\r\n                                 {Post(data)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n                <Container style = {{display:'flex', justifyContent:'center', margin:20}}>\r\n                    {/* <Paginations  style =  {{marginLeft: 90, marginTop:100, fontSize:20}} postsPerPage={postsPerPage} totalPosts={data.length} paginate = {paginate} /> */}\r\n            </Container>\r\n            {/* </div> */}\r\n        </>);\r\n}\r\n\r\nconst dateTime = (params) => {\r\n    let arr =  params.split('T');\r\n    let arr2 = arr[1].split('.');\r\n    let time = '';\r\n    let conv = arr2[0].split(':')\r\n    if(conv[0] < 12)  {\r\n        time = 'AM';\r\n    }else {\r\n        time = 'PM';\r\n    }\r\n    return `${arr[0]}  ${arr2[0]} ${time}`;\r\n}\r\n\r\nfunction Post (posts) {\r\n    for(let group = 0; group < posts.length; group++) {\r\n        for (let i= 0; i < group.transactions.length; i++) {\r\n            console.log(i.receiverAccount); \r\n                        <TableRow\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            key = {i}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {i+1}\r\n                </TableCell>\r\n            </TableRow>\r\n        }\r\n\r\n        //  (group.transaction.map((val,key) => \r\n        //     <TableRow\r\n        //     sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n        //     key = {key}>\r\n        //         <TableCell component=\"th\" scope=\"row\">\r\n        //             {key+1}\r\n        //         </TableCell>\r\n        //         <TableCell align=\"left\">{val.receiverAccount}</TableCell>\r\n        //         <TableCell align=\"left\">{val.transactionAmount}</TableCell>\r\n        //         <TableCell align=\"left\">{group.transactionGroupName}</TableCell>\r\n\r\n        //         {/* <TableCell align=\"left\">{dateTime(val.transactionDate)}</TableCell> */}\r\n                \r\n        //         <TableCell align=\"left\">{(val.transactionType)}</TableCell>\r\n        //         <TableCell align=\"left\">{(val.transactionId)}</TableCell>\r\n        //     </TableRow>\r\n        //     ) );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}