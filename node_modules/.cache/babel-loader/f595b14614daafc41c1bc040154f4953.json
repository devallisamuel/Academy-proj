{"ast":null,"code":"var _marked=/*#__PURE__*/_regeneratorRuntime.mark(logInWatcher),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(logOutWatcher),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(logInActionSession),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(logOutActionSession);import _regeneratorRuntime from\"C:\\\\Users\\\\support\\\\Desktop\\\\xtm\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{takeLatest,put,call}from\"redux-saga/effects\";import{LOGIN_ACTION,loginActionSuccess,LOG_OUT_ACTION,logOutActionSuccess}from\"../redux/action/action\";import{sessionService}from'redux-react-session';export var mySaga=/*#__PURE__*/_regeneratorRuntime.mark(function mySaga(){return _regeneratorRuntime.wrap(function mySaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(LOGIN_ACTION,logInWatcher);case 2:_context.next=4;return takeLatest(LOG_OUT_ACTION,logOutWatcher);case 4:case\"end\":return _context.stop();}}},mySaga);});function logInWatcher(action){return _regeneratorRuntime.wrap(function logInWatcher$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return put(loginActionSuccess(action.payload));case 2:_context2.next=4;return call(logInActionSession,action.payload);case 4:case\"end\":return _context2.stop();}}},_marked);}function logOutWatcher(){return _regeneratorRuntime.wrap(function logOutWatcher$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return put(logOutActionSuccess([]));case 2:_context3.next=4;return call(logOutActionSession);case 4:case\"end\":return _context3.stop();}}},_marked2);}function logInActionSession(payload){return _regeneratorRuntime.wrap(function logInActionSession$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return sessionService.saveSession();case 2:_context4.next=4;return sessionService.saveUser(payload);case 4:case\"end\":return _context4.stop();}}},_marked3);}function logOutActionSession(){return _regeneratorRuntime.wrap(function logOutActionSession$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return sessionService.deleteSession();case 2:_context5.next=4;return sessionService.deleteUser();case 4:case\"end\":return _context5.stop();}}},_marked4);}","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/saga/mySaga.js"],"names":["logInWatcher","logOutWatcher","logInActionSession","logOutActionSession","takeLatest","put","call","LOGIN_ACTION","loginActionSuccess","LOG_OUT_ACTION","logOutActionSuccess","sessionService","mySaga","action","payload","saveSession","saveUser","deleteSession","deleteUser"],"mappings":"kDASUA,Y,iDAKAC,a,iDAKAC,kB,iDAIAC,mB,0HAvBV,OAASC,UAAT,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,oBAArC,CACA,OAASC,YAAT,CAAsBC,kBAAtB,CAAyCC,cAAzC,CAAwDC,mBAAxD,KAAoF,wBAApF,CACA,OAASC,cAAT,KAA+B,qBAA/B,CAEA,MAAO,IAAMC,CAAAA,MAAM,uCAAG,QAATA,CAAAA,MAAS,kIAClB,MAAMR,CAAAA,UAAU,CAACG,YAAD,CAAcP,YAAd,CAAhB,CADkB,uBAElB,MAAMI,CAAAA,UAAU,CAACK,cAAD,CAAgBR,aAAhB,CAAhB,CAFkB,4CAATW,MAAS,GAAH,CAAZ,CAKP,QAAUZ,CAAAA,YAAV,CAAwBa,MAAxB,2IACI,MAAMR,CAAAA,GAAG,CAACG,kBAAkB,CAAEK,MAAM,CAACC,OAAT,CAAnB,CAAT,CADJ,wBAEI,MAAMR,CAAAA,IAAI,CAACJ,kBAAD,CAAoBW,MAAM,CAACC,OAA3B,CAAV,CAFJ,uDAKA,QAAUb,CAAAA,aAAV,6IACI,MAAMI,CAAAA,GAAG,CAACK,mBAAmB,CAAE,EAAF,CAApB,CAAT,CADJ,wBAEI,MAAMJ,CAAAA,IAAI,CAACH,mBAAD,CAAV,CAFJ,wDAKA,QAAUD,CAAAA,kBAAV,CAA6BY,OAA7B,iJACI,MAAMH,CAAAA,cAAc,CAACI,WAAf,EAAN,CADJ,wBAEI,MAAMJ,CAAAA,cAAc,CAACK,QAAf,CAAwBF,OAAxB,CAAN,CAFJ,wDAIA,QAAUX,CAAAA,mBAAV,mJACI,MAAMQ,CAAAA,cAAc,CAACM,aAAf,EAAN,CADJ,wBAEI,MAAMN,CAAAA,cAAc,CAACO,UAAf,EAAN,CAFJ","sourcesContent":["import { takeLatest,put, call } from \"redux-saga/effects\";\r\nimport { LOGIN_ACTION,loginActionSuccess,LOG_OUT_ACTION,logOutActionSuccess  } from \"../redux/action/action\";\r\nimport { sessionService } from 'redux-react-session';\r\n\r\nexport const mySaga = function* () {\r\n    yield takeLatest(LOGIN_ACTION,logInWatcher);\r\n    yield takeLatest(LOG_OUT_ACTION,logOutWatcher);\r\n}\r\n\r\nfunction* logInWatcher (action) {\r\n    yield put(loginActionSuccess (action.payload));\r\n    yield call(logInActionSession,action.payload);\r\n}\r\n\r\nfunction* logOutWatcher () {\r\n    yield put(logOutActionSuccess ([]));\r\n    yield call(logOutActionSession);\r\n}\r\n\r\nfunction* logInActionSession(payload) {\r\n    yield sessionService.saveSession();\r\n    yield sessionService.saveUser(payload);\r\n}\r\nfunction* logOutActionSession() {\r\n    yield sessionService.deleteSession();\r\n    yield sessionService.deleteUser();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}