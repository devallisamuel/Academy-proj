{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\support\\\\Desktop\\\\xtm\\\\src\\\\components\\\\nestedRoutes\\\\BankForm.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Button } from '@mui/material';\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Error from \"../ErrorPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  selectRoot: {\n    backgroundColor: 'white'\n  }\n}));\n\nconst BankForm = () => {\n  _s();\n\n  const {\n    placeholder\n  } = useParams();\n  const [groups, setGroup] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [showForm, setShowForm] = useState(true);\n  const groupDetails = useSelector(state => state.transfer);\n  const [selectedBank, setSelectedBank] = useState('');\n  const colRef1 = useRef(null); // console.log(groupDetails);\n\n  useEffect(() => {\n    function destGroup() {\n      if (!placeholder || !groupDetails) {\n        return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this);\n      } else {\n        setGroup(groupDetails.filter(val => val.group === placeholder));\n      }\n    }\n\n    async function bankName() {\n      return await axios.get('https://localhost:44322/Bank/get_banks').then(res => setOptions(res.data)).catch(err => console.error(err));\n    }\n\n    destGroup();\n    bankName();\n    colRef1.current.id >= 2 ? setShowForm(true) : setShowForm(false);\n    console.log(colRef1.current.id, 'second');\n  }, []);\n  const classes = styles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"primary\",\n        style: {\n          marginLeft: 20,\n          marginTop: 50,\n          fontSize: 20\n        },\n        children: \"Multiple Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginLeft: 20,\n          fontSize: 20,\n          marginTop: 30\n        },\n        children: [placeholder, \"  (\", groupDetails.filter(val => val.group === placeholder)[0].receiver, \"/10)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        direction: \"row\",\n        style: {\n          marginTop: 50,\n          fontSize: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: 1,\n            ref: colRef1,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Account Number\",\n              variant: \"outlined\",\n              style: {\n                marginLeft: 20,\n                width: 300,\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                marginLeft: 20,\n                width: 300\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-label\",\n                style: {\n                  fontSize: 15\n                },\n                children: \"Bank Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                classes: {\n                  select: classes.selectRoot\n                },\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: selectedBank,\n                label: \"Recipient No\",\n                onChange: e => setSelectedBank(e.target.value),\n                elevation: 0,\n                children: options.map((val, key) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  elevation: 0,\n                  value: val,\n                  style: {\n                    color: 'white'\n                  },\n                  children: val\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Amount\",\n              variant: \"outlined\",\n              style: {\n                marginLeft: 20,\n                width: 300,\n                marginBottom: 10,\n                marginTop: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Account Name\",\n              variant: \"outlined\",\n              style: {\n                marginLeft: 20,\n                width: 300,\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n};\n\n_s(BankForm, \"3eeQLhjS7xDGyrXK1XvbqLhejXA=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = BankForm;\nexport default BankForm;\n{\n  /* <Grid item>\r\n     <Container>\r\n         <Button variant=\"contained\" color=\"primary\" disableRipple>Submit</Button>\r\n     </Container>\r\n  </Grid> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"BankForm\");","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/components/nestedRoutes/BankForm.js"],"names":["useParams","useSelector","useState","useEffect","Typography","Grid","makeStyles","InputLabel","MenuItem","FormControl","Button","useRef","axios","Select","TextField","Container","Error","styles","theme","selectRoot","backgroundColor","BankForm","placeholder","groups","setGroup","options","setOptions","showForm","setShowForm","groupDetails","state","transfer","selectedBank","setSelectedBank","colRef1","destGroup","filter","val","group","bankName","get","then","res","data","catch","err","console","error","current","id","log","classes","marginLeft","marginTop","fontSize","receiver","width","marginBottom","select","e","target","value","map","key","color"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState ,useEffect} from \"react\";\r\nimport { Typography } from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport  { makeStyles } from '@mui/styles';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { Button } from '@mui/material';\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport Error from \"../ErrorPage\";\r\n\r\nconst styles = makeStyles(theme => (\r\n    {\r\n        selectRoot: {\r\n            backgroundColor:'white',\r\n        }\r\n    }\r\n));\r\n\r\nconst BankForm = () => {\r\n    const {placeholder} = useParams();\r\n    const [groups,setGroup] = useState([]);\r\n    const [options,setOptions] = useState([]);\r\n    const [showForm, setShowForm] = useState(true);\r\n    const groupDetails = useSelector(state => state.transfer);\r\n    const [selectedBank,setSelectedBank] = useState('');\r\n    const colRef1 = useRef(null);\r\n\r\n\r\n    // console.log(groupDetails);\r\n    useEffect(() => {\r\n        function destGroup () {\r\n            if(!placeholder || !groupDetails) {\r\n                return <Error/>\r\n            }else{\r\n                 setGroup(groupDetails.filter(val => val.group === placeholder));\r\n            }\r\n        }\r\n        async function bankName () {\r\n            return await axios.get('https://localhost:44322/Bank/get_banks').then(res =>setOptions(res.data)).catch(err => console.error(err));\r\n        }\r\n        destGroup();\r\n        bankName();\r\n        colRef1.current.id >= 2 ? setShowForm(true) :setShowForm(false);\r\n        console.log(colRef1.current.id,'second');\r\n    }, []);\r\n\r\n\r\n    const classes = styles();\r\n\r\n    return (<div>\r\n                <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 20, marginTop:50, fontSize:20}}>Multiple Transfer</Typography>\r\n                </Container>\r\n                <Container>\r\n                    <Typography variant=\"body1\" style =  {{marginLeft: 20,fontSize:20, marginTop:30}}>{placeholder}  ({(groupDetails.filter(val => val.group === placeholder))[0].receiver}/10)</Typography>\r\n                </Container>\r\n                <Container>\r\n                    <Grid container spacing = {3} direction=\"row\" style ={{marginTop:50, fontSize:20}}>\r\n                         <Grid item md={6} xs = {12}>\r\n                            {showForm && <div id = {1} ref = {colRef1}>\r\n                                <TextField id=\"outlined-basic\" label=\"Account Number\" variant=\"outlined\" style = {{marginLeft: 20, width:300,marginBottom:10}}/>\r\n                                <FormControl style =  {{marginLeft: 20, width:300}}>\r\n                                <InputLabel id=\"demo-simple-select-label\" style = {{fontSize:15}}>Bank Name</InputLabel>\r\n                                    <Select\r\n                                    classes ={{ select: classes.selectRoot }}\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={selectedBank}\r\n                                    label=\"Recipient No\"\r\n                                    onChange = {e => setSelectedBank(e.target.value)}\r\n                                    elevation = {0}\r\n                                    >\r\n                                    {options.map((val,key) => (\r\n                                    <MenuItem elevation = {0} key = {key} value={val} style = {{color:'white'}}>{val}</MenuItem>\r\n                                    ))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                            <TextField id=\"outlined-basic\" label=\"Amount\" variant=\"outlined\" style = {{marginLeft: 20, width:300,marginBottom:10,marginTop:10}} />\r\n                            <TextField id=\"outlined-basic\" label=\"Account Name\" variant=\"outlined\" style = {{marginLeft: 20, width:300,marginBottom:10}} />\r\n                            </div>}\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n\r\n    </div>);\r\n}\r\nexport default BankForm;\r\n                                {/* <Grid item>\r\n                                    <Container>\r\n                                        <Button variant=\"contained\" color=\"primary\" disableRipple>Submit</Button>\r\n                                    </Container>\r\n                                </Grid> */}"]},"metadata":{},"sourceType":"module"}