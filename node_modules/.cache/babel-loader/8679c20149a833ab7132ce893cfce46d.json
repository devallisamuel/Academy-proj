{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\support\\\\Desktop\\\\xtm\\\\src\\\\components\\\\nestedRoutes\\\\Multiple.js\",\n    _s = $RefreshSig$();\n\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport { Typography } from '@mui/material';\nimport { Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport axios from 'axios';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { detailAction } from '../../redux/action/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  selectRoot: {\n    backgroundColor: 'white'\n  },\n  groups: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 10,\n    marginTop: 40,\n    padding: 20,\n    // border: `1px solid black`,\n    borderRadius: 10,\n    // boxShadow:`0 3px 5px rgb(0 0 0 / 0.2)`,\n    cursor: 'pointer',\n    color: 'primary'\n  }\n}));\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'white',\n  border: '2px solid #fff',\n  boxShadow: 24,\n  p: 4\n};\nexport const Multiple = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [accountNumber, setAccountNumber] = useState('');\n  const [accountName, setAccountName] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [bank, setBank] = useState([]);\n  const [receiver, setReceiver] = useState([]);\n  const [options, setOptions] = useState(''); // when group arrives\n  // const [group,setGroup] = useState();\n\n  const classes = styles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(state => state.reducer);\n  useEffect(() => {\n    if (window.location.pathname === '/welcome/multiple' && user.length === 0) {\n      return navigate('/');\n    }\n\n    async function getBanks() {\n      await axios.get('https://xmtapi.azurewebsites.net/Bank/get_banks').then(res => setBank(res.data)).catch(err => console.log('error from get bank'));\n    }\n\n    getBanks();\n  }, []); // const handleGroupSelect = () => {\n  //     navigate(`/welcome/bankForm/${group}`);\n  // }\n  // const localTransferState = useSelector(state => state.transfer);\n  // console.log(localTransferState);\n\n  const handleSelect = e => {\n    setOptions(e.target.value);\n\n    if (accountNumber.length === 10) {\n      axios.post('https://xmtapi.azurewebsites.net/Transaction/find_account', {\n        bank: e.target.value,\n        accountNumber: accountNumber\n      }).then(response => setAccountName(response.data.customerName)).catch(err => console.error(err, 'i caught the error'));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // dispatch\n\n    dispatch(detailAction(receiver));\n    navigate('/welcome/details');\n  };\n\n  const resetState = () => {\n    setAccountNumber('');\n    setAmount(0);\n    setOptions('');\n    setAccountName('');\n  };\n\n  const handleModal = () => {\n    if (accountNumber.length === 10 && options && accountName.length > 0 && Number(amount) >= 0 && receiver.length <= 10) {\n      setReceiver(prevState => [...prevState, {\n        transactionAmount: Number(amount),\n        receiverAccount: accountNumber,\n        bank: options\n      }]);\n      handleClose();\n      resetState();\n      console.log(receiver);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"primary\",\n        style: {\n          marginLeft: 20,\n          marginTop: 100,\n          fontSize: 20\n        },\n        children: \"Multiple Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: 50,\n        fontSize: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 0,\n        rowSpacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                style: {\n                  marginLeft: 20,\n                  fontSize: 15\n                },\n                children: \" Recipients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                disableRipple: true,\n                onClick: handleOpen,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              open: open,\n              onClose: handleClose,\n              \"aria-labelledby\": \"modal-modal-title\",\n              \"aria-describedby\": \"modal-modal-description\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: style,\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"em\",\n                    children: [\"Note: \", /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"em\",\n                      style: {\n                        color: 'red'\n                      },\n                      children: \"Recipients should not be more than 10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 74\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"standard\",\n                    label: \"Account Number\",\n                    value: accountNumber,\n                    onChange: e => setAccountNumber(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"standard\",\n                    id: \"standard-select-currency\",\n                    select: true,\n                    value: options,\n                    onChange: handleSelect,\n                    children: bank.map((val, key) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      style: {\n                        color: 'white'\n                      },\n                      value: val,\n                      children: [\" \", val]\n                    }, key, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 68\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"standard\",\n                    label: \"Amount\",\n                    value: amount,\n                    style: {\n                      color: 'white'\n                    },\n                    onChange: e => setAmount(e.target.value),\n                    onBlur: e => setAmount(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"standard\",\n                    label: \"Account Name\",\n                    value: accountName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    disableRipple: true,\n                    onClick: handleModal,\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), !receiver.length && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                marginLeft: 20,\n                fontSize: 12\n              },\n              children: \"No items yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 46\n          }, this), receiver.map((val, key) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                boxShadow: '2px 2px 2px 0.5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"primary\",\n                style: {\n                  marginLeft: 20,\n                  fontSize: 15\n                },\n                children: val.receiverAccount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                style: {\n                  marginLeft: 20,\n                  fontSize: 12\n                },\n                children: [val.bank, \" |   N\", val.transactionAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 53\n          }, this)), receiver.length >= 2 && receiver.length <= 10 && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              disableRipple: true,\n              style: {\n                marginLeft: 20\n              },\n              endIcon: /*#__PURE__*/_jsxDEV(ArrowRightAltIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 128\n              }, this),\n              onClick: handleSubmit,\n              children: \"Proceed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                style: {\n                  marginLeft: 20,\n                  fontSize: 15\n                },\n                children: \"Groups\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Multiple, \"mVf3fOucpoV8w67qw96j4L2nTnY=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Multiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiple\");","map":{"version":3,"sources":["C:/Users/support/Desktop/xtm/src/components/nestedRoutes/Multiple.js"],"names":["Grid","Container","Typography","Button","TextField","Stack","AddIcon","IconButton","useState","useEffect","makeStyles","Box","Modal","ArrowRightAltIcon","axios","MenuItem","useDispatch","useSelector","useNavigate","detailAction","styles","theme","selectRoot","backgroundColor","groups","display","alignItems","marginBottom","marginTop","padding","borderRadius","cursor","color","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Multiple","open","setOpen","handleOpen","handleClose","accountNumber","setAccountNumber","accountName","setAccountName","amount","setAmount","bank","setBank","receiver","setReceiver","options","setOptions","classes","dispatch","navigate","user","state","reducer","window","location","pathname","length","getBanks","get","then","res","data","catch","err","console","log","handleSelect","e","target","value","post","response","customerName","error","handleSubmit","preventDefault","resetState","handleModal","Number","prevState","transactionAmount","receiverAccount","height","marginLeft","fontSize","map","val","key"],"mappings":"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","sourcesContent":["import Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport { Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useState,useEffect } from 'react';\r\nimport  { makeStyles } from '@mui/styles';\r\nimport Box from '@mui/material/Box';  \r\nimport Modal from '@mui/material/Modal';\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport axios from 'axios';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { detailAction } from '../../redux/action/action';\r\n\r\nconst styles = makeStyles(theme => (\r\n    {\r\n        selectRoot: {\r\n            backgroundColor:'white',\r\n        },\r\n        groups: {\r\n            display:'flex',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n            marginTop: 40,\r\n            padding: 20,\r\n            // border: `1px solid black`,\r\n            borderRadius:10,\r\n            // boxShadow:`0 3px 5px rgb(0 0 0 / 0.2)`,\r\n            cursor: 'pointer',\r\n            color:'primary'\r\n        }  \r\n    }\r\n));\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'white',\r\n    border: '2px solid #fff',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\nexport const Multiple = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [accountNumber,setAccountNumber] = useState('');\r\n    const [accountName, setAccountName] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [bank,setBank] = useState([]);\r\n    const [receiver, setReceiver] = useState([]);\r\n\r\n    const [options,setOptions] = useState('');\r\n    // when group arrives\r\n    // const [group,setGroup] = useState();\r\n    const classes = styles();\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(state => state.reducer);\r\n    useEffect(() => {\r\n        if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n            return navigate('/');\r\n        }\r\n        async function getBanks () {\r\n             await axios.get('https://xmtapi.azurewebsites.net/Bank/get_banks')\r\n             .then(res =>setBank(res.data)).catch(err => console.log('error from get bank'));\r\n        }\r\n        getBanks();\r\n        \r\n    }, []);\r\n\r\n    // const handleGroupSelect = () => {\r\n    //     navigate(`/welcome/bankForm/${group}`);\r\n    // }\r\n    // const localTransferState = useSelector(state => state.transfer);\r\n    // console.log(localTransferState);\r\n\r\n    const handleSelect = (e) => {\r\n         setOptions(e.target.value);\r\n         if(accountNumber.length === 10) {\r\n            axios.post('https://xmtapi.azurewebsites.net/Transaction/find_account',{bank:e.target.value, accountNumber:accountNumber}).then(response => (setAccountName(response.data.customerName))).catch(err => console.error(err,'i caught the error'));\r\n            }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // dispatch\r\n        dispatch(detailAction(receiver));\r\n        navigate('/welcome/details');\r\n    }\r\n    const resetState = () => {\r\n        setAccountNumber('');\r\n        setAmount(0);\r\n        setOptions('');\r\n        setAccountName('')\r\n    }\r\n    const handleModal = () => {\r\n        if(accountNumber.length === 10 && options && accountName.length>0 && Number(amount) >= 0 && receiver.length <=10 ) {\r\n            setReceiver(prevState => [...prevState,{transactionAmount: Number(amount),\r\n                receiverAccount:accountNumber,\r\n               bank:options}]);\r\n            handleClose();\r\n            resetState();\r\n            console.log(receiver)\r\n        }\r\n    }\r\n    return (<div style = {{height:'100%'}}>\r\n        <Container>\r\n        <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 20, marginTop:100, fontSize:20}}>Multiple Transfer</Typography>\r\n        </Container>\r\n        <Container style =  {{marginTop:50, fontSize:20}} >\r\n            <Grid container direction = 'row' spacing={0} rowSpacing={5}>\r\n                <Grid  item md = {6} xs = {12} container  spacing = {3}>\r\n                        <Grid item xs ={12} md={12}>\r\n                            <div style ={{display: 'flex', alignItems:'center'}}>                                \r\n                                <Typography variant=\"body1\" style =  {{marginLeft: 20, fontSize:15}}> Recipients</Typography>\r\n                                <IconButton color = 'primary' disableRipple onClick={handleOpen}>\r\n                                    <AddIcon  color ='primary' />\r\n                                </IconButton>\r\n                            </div>\r\n                            <Modal\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"modal-modal-title\"\r\n                                aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Box sx={style}>\r\n                                    <Stack spacing = {2}>\r\n                                        <Typography variant ='em' >Note: <Typography variant ='em' style= {{color:'red'}}>Recipients should not be more than 10</Typography></Typography>\r\n                                        <TextField  variant= 'standard' label = 'Account Number' value = {accountNumber}  onChange = {e => setAccountNumber(e.target.value)}/>\r\n                                        <TextField variant= 'standard' id=\"standard-select-currency\"  select value = {options}  onChange = {handleSelect}>\r\n                                            {bank.map((val,key) => <MenuItem key={key} style = {{color:'white'}}  value = {val}> {val}</MenuItem>)}\r\n                                        </TextField>\r\n                                        <TextField  variant= 'standard' label = 'Amount' value = {amount} style = {{color:'white'}} onChange = {e => setAmount(e.target.value)} onBlur = {e => setAmount(e.target.value)}/>\r\n                                        <TextField  variant= 'standard' label = 'Account Name' value = {accountName} />\r\n                                        <Button variant = 'contained' color = 'primary' disableRipple onClick = {handleModal}>Add</Button>\r\n                                    </Stack>\r\n                                </Box>\r\n                            </Modal> \r\n                        </Grid>\r\n                        {!receiver.length && <Grid item xs ={12} md = {12} >\r\n                            <Typography variant = 'h6' style =  {{marginLeft: 20, fontSize:12}} >No items yet</Typography>\r\n                        </Grid>}\r\n                        {receiver.map( (val,key) => <Grid item xs ={12} md = {12} key= {key} >\r\n                                <div style = {{boxShadow:'2px 2px 2px 0.5'}}>\r\n                                    <Typography variant = 'body1' color = 'primary' style =  {{marginLeft: 20, fontSize:15}}>{val.receiverAccount}</Typography>\r\n                                    <Typography variant = 'h6' style =  {{marginLeft: 20, fontSize:12}}>{val.bank} |   N{val.transactionAmount}</Typography>\r\n                                </div>\r\n                        </Grid>)}\r\n                        {(receiver.length >= 2 && receiver.length <= 10) && <Grid item xs ={12} md = {12} >\r\n                            <Button color = 'primary' variant = 'contained' disableRipple style =  {{marginLeft: 20}} endIcon={< ArrowRightAltIcon/>} onClick = {handleSubmit}>Proceed</Button>\r\n                        </Grid>}\r\n                        {/* {!localTransferState && <Grid item>\r\n                             <Typography variant=\"h6\" style =  {{marginLeft: 20, fontSize:13}}>No Group yet</Typography>\r\n                        </Grid>}\r\n                        {localTransferState && localTransferState.map((val,key) =><Grid item key={key} className={classes.groups} onClick = {handleGroupSelect}>\r\n                             <Typography color = 'primary' variant=\"h6\" style ={{marginLeft: 20, fontSize:13}}>{val.group}  ({val.receiver}/10)</Typography>\r\n                        </Grid>)} */}\r\n                </Grid>\r\n                <Grid item md ={6} xs ={12} >\r\n                <Grid container direction='column' spacing = {3}>\r\n                    <Grid item>\r\n                            <Typography variant=\"body1\" style =  {{marginLeft: 20, fontSize:15}}>Groups</Typography>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </div>);\r\n};"]},"metadata":{},"sourceType":"module"}