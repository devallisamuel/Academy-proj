[{"C:\\Users\\support\\Desktop\\xtm\\src\\index.js":"1","C:\\Users\\support\\Desktop\\xtm\\src\\App.js":"2","C:\\Users\\support\\Desktop\\xtm\\src\\reportWebVitals.js":"3","C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\Theme.js":"4","C:\\Users\\support\\Desktop\\xtm\\src\\components\\HomePage.js":"5","C:\\Users\\support\\Desktop\\xtm\\src\\components\\ErrorPage.js":"6","C:\\Users\\support\\Desktop\\xtm\\src\\components\\welcome.js":"7","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\store\\store.js":"8","C:\\Users\\support\\Desktop\\xtm\\src\\saga\\rootSaga.js":"9","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\index.js":"10","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\reducer.js":"11","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\action\\action.js":"12","C:\\Users\\support\\Desktop\\xtm\\src\\saga\\mySaga.js":"13","C:\\Users\\support\\Desktop\\xtm\\src\\History.js":"14","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Dashboard.js":"15","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\BankForm.js":"16","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Details.js":"17","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\detailReducer.js":"18","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Beneficiary.js":"19","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Multiple.js":"20","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\action\\transAction.js":"21","C:\\Users\\support\\Desktop\\xtm\\src\\saga\\tranSaga.js":"22","C:\\Users\\support\\Desktop\\xtm\\src\\saga\\detailSaga.js":"23","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Reusable.js":"24","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\transReducer.js":"25","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\transResult.js":"26","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\transHistory.js":"27","C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\Spinner.js":"28","C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\bubble.js":"29","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Particle.js":"30","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\ParticleConfig.js":"31","C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\Pagination.js":"32","C:\\Users\\support\\Desktop\\xtm\\src\\CreateAccount.js":"33"},{"size":1026,"mtime":1641890753093,"results":"34","hashOfConfig":"35"},{"size":1731,"mtime":1642687164895,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1640826033520,"results":"37","hashOfConfig":"35"},{"size":764,"mtime":1642687136231,"results":"38","hashOfConfig":"35"},{"size":10187,"mtime":1643182606903,"results":"39","hashOfConfig":"35"},{"size":1255,"mtime":1641890753075,"results":"40","hashOfConfig":"35"},{"size":8225,"mtime":1643183356567,"results":"41","hashOfConfig":"35"},{"size":784,"mtime":1643181329914,"results":"42","hashOfConfig":"35"},{"size":269,"mtime":1643179293261,"results":"43","hashOfConfig":"35"},{"size":345,"mtime":1641890753099,"results":"44","hashOfConfig":"35"},{"size":394,"mtime":1643183016608,"results":"45","hashOfConfig":"35"},{"size":1039,"mtime":1643181689835,"results":"46","hashOfConfig":"35"},{"size":885,"mtime":1643182273050,"results":"47","hashOfConfig":"35"},{"size":149,"mtime":1641001460489,"results":"48","hashOfConfig":"35"},{"size":7272,"mtime":1643183471502,"results":"49","hashOfConfig":"35"},{"size":35992,"mtime":1642406610899,"results":"50","hashOfConfig":"35"},{"size":9087,"mtime":1643135800860,"results":"51","hashOfConfig":"35"},{"size":268,"mtime":1641890753098,"results":"52","hashOfConfig":"35"},{"size":4673,"mtime":1642406610903,"results":"53","hashOfConfig":"35"},{"size":9414,"mtime":1643148792486,"results":"54","hashOfConfig":"35"},{"size":708,"mtime":1641890753096,"results":"55","hashOfConfig":"35"},{"size":336,"mtime":1643179357156,"results":"56","hashOfConfig":"35"},{"size":316,"mtime":1641890753105,"results":"57","hashOfConfig":"35"},{"size":2580,"mtime":1641890753087,"results":"58","hashOfConfig":"35"},{"size":276,"mtime":1643148911830,"results":"59","hashOfConfig":"35"},{"size":2628,"mtime":1643148011971,"results":"60","hashOfConfig":"35"},{"size":5688,"mtime":1643184034319,"results":"61","hashOfConfig":"35"},{"size":283,"mtime":1642406610869,"results":"62","hashOfConfig":"35"},{"size":537,"mtime":1642406610891,"results":"63","hashOfConfig":"35"},{"size":328,"mtime":1643122358569,"results":"64","hashOfConfig":"35"},{"size":2516,"mtime":1643122358570,"results":"65","hashOfConfig":"35"},{"size":634,"mtime":1642406610868,"results":"66","hashOfConfig":"35"},{"size":8531,"mtime":1643125644312,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1sns12y",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\support\\Desktop\\xtm\\src\\index.js",[],["145","146"],"C:\\Users\\support\\Desktop\\xtm\\src\\App.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\reportWebVitals.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\Theme.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\HomePage.js",["147"],"// import Box from '@mui/material/Box';\r\n// import Grid from '@mui/material/Grid';\r\nimport login from '../assets/banner.svg';\r\nimport TextField from '@mui/material/TextField';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useState,useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Link } from 'react-router-dom';\r\n// import menuLogo from '../assets/official-logo.png';\r\n// import instagram from '../assets/instagram.png';\r\n// import twitter from '../assets/twitter.png';\r\n// import facebook from '../assets/facebook.png'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginAction } from '../redux/action/action';\r\nimport axios from \"axios\";\r\nimport background from '../assets/svg-background.svg'\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport {Bubble} from './UI/bubble';\r\n\r\n  const useStyle = makeStyles(theme => ({\r\n      borderInput: {\r\n          borderColor: theme.palette.primary.main\r\n      },\r\n      flexText: {\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n      },\r\n      pinkColor: {\r\n          color: '#F62658',\r\n          marginLeft: '200px'\r\n      },\r\n      whiteColor: {\r\n          color: '#fff',\r\n          marginLeft: '100px',\r\n          opacity:0.7\r\n      },\r\n      gridBox:  {\r\n        height:200,\r\n        width:'100%',\r\n        opacity: 1.5,\r\n        //   [theme.breakpoints.down('md')]: {\r\n        //       backgroundColor:`${theme.palette.primary.main}`,\r\n        //   }\r\n      },\r\n      wrapper: {\r\n          margin:0,\r\n          backgroundImage:`url(${background})`,\r\n          height:'100vh',\r\n          overflowX:'hidden',\r\n          backgroundPosition:'center',\r\n        //   backgroundAttachment: 'fixed',\r\n        //   backgroundRepeat: 'no-repeat',\r\n        \r\n          backgroundSize:'cover'\r\n      },\r\n      adornment:{\r\n        color:'white',\r\n        backgroundColor:'white'\r\n    }\r\n  }));\r\nconst Home = (props) => {\r\n    const [values, setValues] = useState({\r\n        password: '',\r\n        showPassword: false\r\n      });\r\n    const [email,setEmail] = useState('');\r\n    const [passwordError,setPasswordError] = useState(false);\r\n    const [emailError,setEmailError] = useState(false);\r\n    const [data,setData] = useState([]);\r\n    const [warning,setWarning] = useState(false);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // fetchApi();\r\n        // console.log(data);\r\n    }, [])\r\n\r\n    async function fetchApi () {\r\n         await axios.post(\"https://xmtapi.azurewebsites.net/Customers/login\",{email:email, password:values.password})\r\n        .then\r\n       (response => (JSON.stringify(response))).then(response => {\r\n        console.log(response);   \r\n        setData(JSON.parse(response).data);\r\n        dispatch(loginAction(JSON.parse(response).data));\r\n        setWarning(false);\r\n        navigate('/welcome');\r\n       }).catch\r\n       (error => {console.log(error,'error message'); setWarning(true)})\r\n   }\r\n      const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n      const handleClickShowPassword = () => {\r\n          setValues({\r\n              ...values,\r\n              showPassword: !values.showPassword,\r\n            });\r\n        };\r\n        \r\n      const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n      const handleEmail = (e) => {\r\n          setEmail(e.target.value);\r\n      }\r\n      const handleSubmit = (e) => {\r\n          e.preventDefault();\r\n        if(values.password === '' || email === ''){\r\n            if (values.password === '' ) {\r\n              setPasswordError(!passwordError);\r\n            }\r\n            if (email === '' ) {\r\n              setEmailError(!emailError);\r\n            }\r\n\r\n        }else {\r\n            setPasswordError(false);\r\n            setEmailError(false);\r\n        }\r\n        if(data){ \r\n            console.log(data);\r\n            fetchApi();\r\n        }\r\n      }\r\n\r\n    const classCust = useStyle();\r\n    return (\r\n        <div className={classCust.wrapper}>\r\n             <Bubble/>\r\n            <div style = {{ width:'100%',} }>\r\n                        <div style = {{marginLeft:'20px'}}>\r\n                             {warning && <Typography variant = 'em' \r\n                                         style = {{color:'red', textAlign:'center'}}>\r\n                                         </Typography>}\r\n                             <Typography variant = 'h2' color= 'secondary' style= {{position:'relative', top:'190px', left:40}}>Welcome!</Typography>\r\n                             <div style= {{position:'relative', top:'220px', left:40}}>\r\n                                 \r\n                                {warning && <Typography variant = 'em' \r\n                                         style = {{color:'red', textAlign:'center'}}>Invalid Details\r\n                                         </Typography>}\r\n                                 <form  onSubmit={handleSubmit}>\r\n                                     <div style = {{marginTop:3}}>\r\n                                         <div style={{marginBottom:20}}>\r\n                                         <Typography variant = 'p' color = 'secondary'>\r\n                                             Email Address/Username\r\n                                         </Typography>\r\n                                         </div>\r\n                                         <TextField \r\n                                         id=\"standard-text\" \r\n                                         variant ='standard'\r\n                                         color = 'secondary'\r\n                                         sx = {{width: 300, input: { color: 'white' }}} \r\n                                         onChange = {handleEmail}\r\n                                         focused\r\n                                         style = {{backgroundColor:'primary'}}\r\n                                         \r\n                                          />\r\n                                         <div>\r\n                                         {emailError && <Typography variant = 'em' \r\n                                         style = {{color:'red'}}>Email/Username cannot be empty\r\n                                         </Typography>}\r\n                                         </div>\r\n                                     </div>\r\n                                     <div>\r\n                                         <div style = {{marginTop:'20px'}} >\r\n                                             <span style ={{color:'white'}}>Password</span>\r\n                                             <span className={classCust.whiteColor}>Forgot Password?</span>\r\n                                         </div>\r\n                                         <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\"/>\r\n                                         <div></div>\r\n                                         <TextField\r\n                                             id=\"outlined-adornment-password\"\r\n                                             variant = 'standard'\r\n                                             color = 'secondary'\r\n                                             type={values.showPassword ? 'text' : 'password'}\r\n                                             value={values.password}\r\n                                             focused                                   \r\n                                             onChange={handleChange('password')}\r\n                                             endadornment={\r\n                                             <InputAdornment position=\"end\" color = 'secondary' sx = {{ classes : { adornedEnd : classCust.adornment } }} >\r\n                                                 <IconButton\r\n                                                 aria-label=\"toggle password visibility\"\r\n                                                 onClick={handleClickShowPassword}\r\n                                                 onMouseDown={handleMouseDownPassword}\r\n                                                 edge=\"end\"\r\n                                                 classes = {{adornedEnd : classCust.adornment}}\r\n                                                 >\r\n                                                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                 </IconButton>\r\n                                             </InputAdornment>\r\n                                             }\r\n                                             sx = {{width: 300,input: { color: 'white' } }}\r\n                                         />\r\n                                         <div>\r\n                                         {passwordError && <Typography variant = 'em' \r\n                                         style = {{color:'#F62650'}}>Password cannot be empty\r\n                                         </Typography>}\r\n                                         <div></div>\r\n                                         <Typography variant = 'em' \r\n                                         style = {{color:'white', marginTop:'50px', position: 'relative', top:'10px '}} component = {Link} to = '/createAccount'>Create Account\r\n                                         </Typography>\r\n                                         </div>\r\n                                     </div>\r\n                                     <Button variant=\"contained\" sx = {{width:'300px', marginTop:'50px'}} type ='submit' color = 'secondary'>Login</Button>\r\n                                 </form>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                   \r\n            </div>\r\n        );\r\n}\r\nexport default Home;","C:\\Users\\support\\Desktop\\xtm\\src\\components\\ErrorPage.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\welcome.js",["148","149","150","151"],"import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport App from '../assets/official-logo.png';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useScrollTrigger } from \"@mui/material\";\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport  { makeStyles } from '@mui/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport { detailAction, detailActionSuccess } from \"../redux/action/action\";\r\nimport { createGroup, createGroupSuccess } from \"../redux/action/transAction\";\r\n\r\n\r\n\r\n\r\nimport { logOutAction } from \"../redux/action/action\";\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children} = props;\r\n    const trigger = useScrollTrigger({\r\n      disableHysteresis: true,\r\n      threshold: 0,\r\n    });\r\n  \r\n    return React.cloneElement(children, {\r\n      elevation: trigger ? 4 : 0,\r\n    });\r\n  }\r\n\r\n  const styles = makeStyles(theme => (\r\n      {\r\n          drawer : {\r\n              \"&:hover\": {\r\n                  backgroundColor: \"transparent\"\r\n              }\r\n          },\r\n        paper: {\r\n              color:console.log(theme),\r\n              backgroundColor:theme.palette.background.paper,\r\n              zIndex: 1000\r\n          },\r\n        drawerItem : {\r\n              color:'white'\r\n          },\r\n        appBar: {\r\n            zIndex: theme.zIndex.appBar,\r\n        }, \r\n        toolbarMargin: {\r\n            marginTop: '20px'\r\n        },\r\n        toolbarMarginBottom: {\r\n            marginBottom: 60\r\n        } \r\n      }\r\n  ));\r\n\r\nconst Welcome = (props) => {\r\n    const user = useSelector(state => state.reducer);\r\n    const localTransferState = useSelector(state => state.transfer);\r\n    const groupDetails = useSelector(state => state.transfer);\r\n    \r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = styles();\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const iOS =typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n    const drawer = (<>\r\n                    <SwipeableDrawer disableBackdropTransition={!iOS} \r\n                    disableDiscovery={iOS}\r\n                    open = {openDrawer}\r\n                    onClose = {() => setOpenDrawer(false)}\r\n                    onOpen = {() => setOpenDrawer(true)}\r\n                    classes={{paper:classes}}\r\n                     >\r\n                         <div className ={classes.toolbarMargin} />\r\n                        <List disablePadding>\r\n                            <ListItem divider button>\r\n                                <ListItemText disableTypography className={classes.drawerItem}>SERVICES</ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                        <List disablePadding>\r\n                            <ListItem divider button\r\n                             onClick={() => {setOpenDrawer(false); props.setValue(0)}}\r\n                             component={Link}\r\n                             to ='/welcome'\r\n                             selected ={props.value === 0 && window.location.pathname ==='/welcome'}>\r\n                                <ListItemText disableTypography className={classes.drawerItem}>Dashboard</ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                        <List disablePadding>\r\n                            <ListItem divider button\r\n                             onClick={() => {setOpenDrawer(false); props.setValue(1)}}\r\n                             component={Link}\r\n                             to ='/welcome/beneficiary'\r\n                             selected ={props.value ===1 && window.location.pathname ==='/welcome/beneficiary'}>\r\n                                <ListItemText disableTypography className={classes.drawerItem}>Save Beneficiary</ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                        <List>\r\n                            <ListItem divider button\r\n                             onClick={() => {setOpenDrawer(false); props.setValue(2)}}\r\n                             component={Link}\r\n                             to ='/welcome/multiple'\r\n                             selected ={props.value === 2 && window.location.pathname ==='/welcome/multiple'}>\r\n                                <ListItemText disableTypography className={classes.drawerItem}>Multiple Transfer</ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                        <List>\r\n                            <ListItem divider button onClick={() => {setOpenDrawer(false);props.setValue(3)}}\r\n                            component={Link}\r\n                            to ='/welcome/history'\r\n                            selected ={props.value === 3 && window.location.pathname ==='/welcome/history'}>\r\n                                <ListItemText disableTypography className={classes.drawerItem}>Transaction History</ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                        <List>\r\n                            <ListItem divider button onClick={() => handleLogOut()}>\r\n                                <ListItemText disableTypography className={classes.drawerItem}>Log Out</ListItemText>\r\n                            </ListItem>\r\n                        </List>\r\n                     </SwipeableDrawer>   \r\n                    </>)\r\n\r\n    useEffect(() => {\r\n        if( window.location.pathname ==='/welcome' && user.length === 0 )    {\r\n            console.log('second');\r\n            return navigate('/');\r\n        }\r\n    }, [location.pathname, navigate, user.length]);\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(logOutAction([]));\r\n        dispatch(createGroup({}));\r\n        dispatch(detailAction([]));\r\n        \r\n        return navigate('/');\r\n    }\r\n    return (<div>\r\n        {/* app bar */}\r\n        {/* outlet */}\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <ElevationScroll>\r\n                <AppBar position=\"fixed\" className= {classes.appBar} style ={{zIndex:2000}}>\r\n                    <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                        disableRipple\r\n                        className={classes.drawer}\r\n                        onClick = {() => setOpenDrawer(!openDrawer)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Button disableRipple style={{marginLeft:50}}><img src={App} alt=\"app logo\"  style={{width:'3rem', height:'3rem', padding:'0px'}} /></Button>\r\n                    <div style = {{marginLeft:'auto', display: 'flex', justifyContent:\"space-evenly\", alignItems:'center'}}>\r\n                        { user.length >= 1 && <Typography variant=\"h6\" component=\"div\" sx= {{marginRight:5}}>\r\n                            {user[0].firstName} \r\n                        </Typography>}\r\n                        <Button color=\"inherit\" style={{marginLeft:'auto',fontSize: 15}} onClick={handleLogOut}>Log Out</Button>\r\n                    </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            {drawer}\r\n        </Box>\r\n        <div className={classes.toolbarMarginBottom}/> \r\n            <Outlet />\r\n        </div>);\r\n}\r\nexport default Welcome;","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\store\\store.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\saga\\rootSaga.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\index.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\reducer.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\redux\\action\\action.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\saga\\mySaga.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\History.js",[],["152","153"],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Dashboard.js",["154","155"],"import { Typography } from \"@mui/material\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport background from '../../assets/Jemeelah-3.svg';\r\nimport Tilt from 'react-vanilla-tilt'\r\n\r\n// import ParticleBackground from \"../UI/Particle\";\r\n\r\n\r\nimport atm from '../../assets/atm.svg';\r\nimport money from '../../assets/money.svg';\r\nimport multiple from '../../assets/Multiple.svg';\r\nimport mail from '../../assets/XMLID_1_.svg';\r\nimport tangle from '../../assets/Vector-1.svg';\r\n// import CircularIndeterminate from \"../UI/Spinner\";\r\n// import ParticleBackground from \"./Particle\";\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    const [time,setTime] = useState('');\r\n    const navigate = useNavigate();\r\n    const [newUser,setNewUser] = useState('');\r\n    // const [displayUser,setDisplayUser] = useState([]);\r\n    const user = useSelector(state => state.reducer);\r\n\r\n\r\n    useEffect(() => {\r\n        const greeting = () => {\r\n            // console.log(user);\r\n            if( window.location.pathname ==='/welcome/dashboard' && user.length  === 0 )    {\r\n                return navigate('/');\r\n            }\r\n            // get time\r\n            let time = new Date().getHours();\r\n            // if t < 12AM (morning)\r\n            if(time < 12)   {\r\n                setTime('morning');\r\n            }else if(time >= 12 && time < 18) {\r\n            setTime('afternoon');\r\n            }else if (time >=18 && time <= 23) {\r\n             setTime('evening');\r\n            }else {\r\n                setTime('');\r\n            }\r\n        }\r\n        const getUsers = async () => {\r\n            // setNewUser(res.data.value)\r\n            let response = await axios.get(`https://xmtapi.azurewebsites.net/Customers/get_customer_by_account_number/${user[0].accountNumber}`).then(res => setNewUser(res.data));\r\n            // console.log(newUser,'NEW USER'); \r\n       }\r\n    //    const getFreshUpdate = () => {\r\n    //     setDisplayUser(newUser);\r\n    //    }\r\n        greeting();\r\n        getUsers();\r\n        // getFreshUpdate();\r\n    }, [navigate, user,newUser]);\r\n\r\n    // if(Object.keys(newUser)) {\r\n    //     return (<div style ={{position:'absolute', top:'50%', left:'50%'}}>\r\n    //     <CircularIndeterminate/>\r\n    // </div>);\r\n    // }\r\n\r\n    return ( <>\r\n            {/* <ParticleBackground /> */}\r\n    <div style = {{backgroundImage:`url(${background})`,\r\n    height:'100vh',\r\n    width:'100%',\r\n    overflowX:'hidden',\r\n    backgroundPosition:'center',\r\n    backgroundSize:'cover',\r\n    // marginBottom:200\r\n    }}>\r\n        <Container>\r\n            {user.length && <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 40, fontSize:20, marginTop:70}}>Good {time}, {user[0].firstName}</Typography>}\r\n        </Container>\r\n        <Container>\r\n          <Grid container direction='row' spacing = {0} style={{marginLeft:20, marginRight:20,marginTop:20}}>\r\n             <Grid item md ={6} xs = {12} style={{marginTop:20, padding:0}}>\r\n                 \r\n                 <div style = {{ backgroundImage:`url(${atm})`,\r\n                //   width:'50%',\r\n                  height:'250px', \r\n                  borderRadius:20,\r\n                  backgroundRepeat:'no-repeat',\r\n                //    backgroundPosition:'center',\r\n                //    backgroundSize:'cover'\r\n                  }}>\r\n                    <Grid  item container direction='column' spacing ={3} justifyContent ='space-between'>\r\n                        <Grid item> \r\n                            <div style={{display:'block', marginLeft:10}}>\r\n                                <div>\r\n                                <Typography variant = 'p' style ={{color:'white', marginLeft:20, fontSize:10}}>Tier 3 Saving account</Typography>\r\n                                </div>\r\n                                <div>\r\n                               { newUser && <Typography variant = 'span' style ={{color:'white', marginTop:10, marginLeft:20, fontSize:20}}>N {newUser.accountBalance}</Typography>}\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item alignItems='flex-end'>\r\n                            { user.length && <Typography variant = 'span' style ={{color:'white', marginTop:10, marginLeft:30, fontSize:15}}>Account No: {user[0].accountNumber}</Typography>}\r\n                        </Grid>\r\n                    </Grid>\r\n                 </div>\r\n                 </Grid>\r\n             <Grid item md ={6} xs = {12}>\r\n                 <Grid item md = {12} xs = {12} style ={{marginLeft:20}}>What would you like to do today?</Grid>\r\n                 <Grid container style={{marginTop:10}}>\r\n                    <Grid item md = {6} xs = {12}>\r\n                        <div style = {{display:'flex',justifyContent:'sapce-between', marginTop:10,marginLeft:10}}>\r\n                            <img src={multiple} alt=\"multiple icon\" style = {{ width:30, height:20, verticalAlign:'bottom'}} component = {Link} to = '/welcome/multiple' onClick={() => props.setValue(2)}/>\r\n                            <Typography color=\"primary\" style = {{marginLeft:10,textDecoration:'none',zIndex:1000}} component = {Link} to = '/welcome/multiple' onClick={() => props.setValue(2)}>Multiple Transfer</Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md = {6} xs = {12}>\r\n                        <div style = {{display:'flex',justifyContent:'sapce-between',marginTop:10, marginLeft:10}}>\r\n                            <img src={money} alt=\"multiple icon\" style = {{ width:30, height:20, verticalAlign:'bottom'}} component = {Link} to = '/welcome/beneficiary' onClick={() => props.setValue(1)}/>\r\n                            <Typography color=\"primary\" style = {{marginLeft:10,textDecoration:'none',zIndex:1000}} component = {Link} to = '/welcome/beneficiary' onClick={() => props.setValue(1)}>Save Beneficiary</Typography>\r\n                        </div>\r\n                    </Grid>\r\n                 </Grid>\r\n             </Grid> \r\n            </Grid>  \r\n        </Container>\r\n        <Container>    \r\n            <Typography variant=\"h6\" color ='primary' style =  {{marginLeft: 30, marginTop:50, fontSize:20}}>Talk to us</Typography>\r\n            <Typography variant=\"h6\"  style =  {{marginLeft: 30, fontSize:18}}>We are happy to assist</Typography>\r\n        </Container>\r\n\r\n        <Container>\r\n            <div style={{display:'flex',marginLeft: 30, marginTop: 10}}>\r\n                <div>\r\n                <img src={mail} alt=\"mail\" style={{width:30,height:30, verticalAlign:'bottom'}} />\r\n                <span style = {{marginLeft:5}}>help @xmt.ng</span>\r\n                </div>\r\n                <div style={{marginLeft:30}}>\r\n                <img src={tangle} alt=\"mail\" style={{width:30,height:30, verticalAlign:'bottom'}} />\r\n                <span style = {{marginLeft:5}}>0700000001</span>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n        </div></>);\r\n}\r\nexport default Dashboard;","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\BankForm.js",["156","157"],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Details.js",["158","159"],"import Container from '@mui/material/Container';\r\nimport { Grid, Typography } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Button } from '@mui/material';\r\nimport { useState,useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useSelector } from 'react-redux';\r\nimport Stack from '@mui/material/Stack';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router';\r\nimport background from '../../assets/Jemeelah1-1.svg';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'white',\r\n    border: '2px solid #fff',\r\n    borderRadius:3,\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n\r\n\r\nexport const Details = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [error,setError] = useState(false);\r\n    const [pin, setPin] = useState('');\r\n    \r\n    const [open1, setOpen1] = useState(false);\r\n    const [groupName,setGroupName] = useState('')\r\n    const handleOpen1 = () => setOpen1(true);\r\n    const handleClose1 = () => setOpen1(false);\r\n    \r\n\r\n    const navigate = useNavigate();\r\n\r\n    const sender = useSelector(state => state.reducer);\r\n    console.log(sender[0]);\r\n\r\n    const multipleTransfer = useSelector(state => state.detail);\r\n    console.log(multipleTransfer);\r\n    let counter = 0;\r\n    const user = useSelector(state => state.reducer);\r\n    useEffect(() => {\r\n        if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n            return navigate('/');\r\n        }\r\n        \r\n    }, []);\r\n    const getTotal = function () {\r\n        for(let i  = 0;  i < multipleTransfer.length; i++) {\r\n            counter+= multipleTransfer[i].transactionAmount;\r\n        }\r\n        return counter;\r\n    }\r\n    const handlePin = (event) => {\r\n        setPin(event.target.value);\r\n    }\r\n    const handlePayment = async (event) => {\r\n        try{\r\n            event.preventDefault();\r\n            if(Number(pin.length) === 4) {\r\n                setError(false);\r\n                console.log(pin);\r\n                let response =await axios.post('https://xmtapi.azurewebsites.net/Transaction/make_transfer', {senderAccount:sender[0].accountNumber, \r\n                accountPin: pin.toString(),\r\n                groupName:groupName.length > 0 ? groupName:'Xtransfer', \r\n                transfers:multipleTransfer}).then(res => res.data.message).catch(err => console.error(err,'error on post request of transfer'));\r\n                console.log(response);\r\n                navigate(`/welcome/result/${response}`);\r\n            } else {\r\n                setError(true);\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.error(error);\r\n            navigate('/welcome');\r\n        }\r\n    }\r\n\r\n return (<>\r\n                <div style = {{backgroundImage:`url(${background})`,\r\n                    height:'100vh',\r\n                    width:'100%',\r\n                    overflowX:'hidden',\r\n                    backgroundPosition:'center',\r\n                    backgroundSize:'cover',\r\n                    }}>\r\n                <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:100, fontSize:20}}>Transfer Details</Typography>\r\n                </Container>\r\n                <Container>\r\n                <div  color ='primary' style =  {{marginLeft: 90, marginTop:10, fontSize:12, display:'flex'}}>\r\n                        <Typography variant = 'h6' style ={{fontSize:15}}>To save recipients as a group click\r\n                        </Typography>\r\n                        <Typography variant = 'h6' color ='primary' onClick={handleOpen1} style = {{cursor:'pointer',fontSize:15, marginLeft:5}}>\r\n                                here\r\n                            </Typography>\r\n                            <Modal\r\n                            open={open1}\r\n                            onClose={handleClose1}\r\n                            aria-labelledby=\"modal-modal-title\"\r\n                            aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Box sx={style}>\r\n                                    <Stack spacing= {2}>\r\n                                        <TextField id=\"standard-basic\" label=\"Group Name\" variant=\"standard\"value = {groupName} onChange = {e => setGroupName(e.target.value)} />\r\n                                        <Button variant = 'contained' onClick = {handleClose1}>Save</Button>\r\n                                    </Stack>\r\n                                </Box>\r\n                            </Modal>\r\n                    </div> \r\n                    <TableContainer style =  {{marginLeft: 100, marginTop:20}} >\r\n                        <Table sx={{ width: '700px' }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Serial Number</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Amount</TableCell>\r\n                                    <TableCell>Bank</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {multipleTransfer && multipleTransfer.map((val,key)  => <TableRow\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }} key={key}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {key +1}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{val.receiverAccount}</TableCell>\r\n                                    <TableCell align=\"left\">{val.transactionAmount}</TableCell>\r\n                                    <TableCell align=\"left\">{val.bank}</TableCell>\r\n                                </TableRow>)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n                <Container>\r\n                <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 110, marginTop:50, fontSize:20}}>Total:N {getTotal()}</Typography>\r\n                </Container>\r\n                <Container>\r\n                    <Grid container style =  {{marginLeft: 90, marginTop:50}} >\r\n                        <Grid item md= {12} xs ={12} justifyContent='center' alignItems = 'center'>\r\n                            <div style ={{marginLeft:20}}>\r\n                                <Button variant='contained' color = 'primary' onClick={handleOpen}>Proceed</Button>\r\n                            </div>\r\n                            <Modal\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"modal-modal-title\"\r\n                                aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Box sx={style}>\r\n                                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style = {{textAlign:'center'}}>\r\n                                    Please enter your four digit pin\r\n                                </Typography>\r\n                                <div style ={{display:'flex',justifyContent:'center'}}>\r\n                                <TextField\r\n                                    id=\"filled-password-input\"\r\n                                    label=\"Pin\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    variant=\"filled\"\r\n                                    style = {{marginTop:20}}\r\n                                    onChange = {handlePin}\r\n                                    onBlur = {handlePin}\r\n                                    />\r\n                                </div>\r\n                                <div style = {{marginTop:20, display:'flex',justifyContent:'center'}}>\r\n                                    <Button variant = 'contained' color = 'primary' style =  {{width:220}} disableRipple  onClick = {handlePayment}>Pay</Button>\r\n                                </div> \r\n                                </Box>\r\n                            </Modal>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n                </div>\r\n        </>)\r\n}; ","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\detailReducer.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Beneficiary.js",["160"],"import Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport { Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { useState,useEffect } from 'react';\r\nimport  { makeStyles } from '@mui/styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport background from '../../assets/Jemeelah1-1.svg';\r\n\r\nconst styles = makeStyles(theme => (\r\n    {\r\n        selectRoot: {\r\n            backgroundColor:'white',\r\n        }  \r\n    }\r\n));\r\nexport const Beneficiary = () => {\r\n    const [bank,setBank] = useState('');\r\n    const classes = styles();\r\n    const options = [\r\n    'Access Bank',\r\n    'Access (Diamond) Bank',\r\n    'Ecobank',\r\n    'FCMB',\r\n    'Fidelity Bank', \r\n    'First Bank Of Nigeria','GTBank','Globus Bank',\r\n    'Heritage Bank',\r\n    'JAIZ Bank',\r\n    'Keystone Bank',\r\n    'Lotus Bank',\r\n    'Polaris Bank',\r\n    'Providus Bank',\r\n    'StanbicIBTC Bank',\r\n    'Sterling Bank',\r\n    'UBA',\r\n    'Union Bank',\r\n    'Unity Bank',\r\n    'Wema Bank',\r\n    'Zenith Bank'\r\n    ];\r\n    const user = useSelector(state => state.reducer);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n            return navigate('/');\r\n        }\r\n        \r\n    }, []);\r\n    const handleSelect = (e) => {\r\n        setBank(e.target.value);\r\n    }\r\n    return (<div\r\n        style = {{backgroundImage:`url(${background})`,\r\n        height:'100vh',\r\n        width:'100%',\r\n        overflowX:'hidden',\r\n        backgroundPosition:'center',\r\n        backgroundSize:'cover',\r\n        }}\r\n    >\r\n        <Container>\r\n        <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 20, marginTop:100, fontSize:20}}> Save Beneficiary</Typography>\r\n        </Container>\r\n        <Container style =  {{marginTop:50, fontSize:20}} >\r\n            <Grid container direction = 'row' spacing={0}>\r\n                <Grid  item md = {6} xs = {12}>\r\n                    <Grid container direction='column' spacing = {3}>\r\n                        <Grid item>\r\n                            <Typography variant=\"body1\" style =  {{marginLeft: 20, fontSize:15}}> Beneficiary List</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" style =  {{marginLeft: 20, fontSize:13}}>No item yet</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md ={6} xs ={12} >\r\n                <Grid container direction='column' spacing = {3}>\r\n                    <Grid item>\r\n                            <Typography variant=\"body1\" style =  {{marginLeft: 20, fontSize:15}}> Add Beneficiary</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField id=\"outlined-basic\" label=\"Account Number\" variant=\"outlined\" style = {{marginLeft: 20, width:300}} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl style =  {{marginLeft: 20, width:300}}>\r\n                                <InputLabel id=\"demo-simple-select-label\" style = {{fontSize:15}}>select bank</InputLabel>\r\n                                    <Select\r\n                                    classes ={{ root: classes.selectRoot }}\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={bank}\r\n                                    label=\"select Bank\"\r\n                                    onChange = {handleSelect}\r\n                                    >\r\n                                    {options.map((val,key) => (\r\n                                    <MenuItem key = {key} value={val} style = {{color:'white'}}>{val}</MenuItem>\r\n                                    ))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant='contained' style =  {{marginLeft: 20, width:300}}>Submit</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </div>);\r\n};","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Multiple.js",["161","162"],"import Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport { Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useState,useEffect } from 'react';\r\nimport  { makeStyles } from '@mui/styles';\r\nimport Box from '@mui/material/Box';  \r\nimport Modal from '@mui/material/Modal';\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport axios from 'axios';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { detailAction } from '../../redux/action/action';\r\n\r\nconst styles = makeStyles(theme => (\r\n    {\r\n        selectRoot: {\r\n            backgroundColor:'white',\r\n        },\r\n        groups: {\r\n            display:'flex',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n            marginTop: 40,\r\n            padding: 20,\r\n            // border: `1px solid black`,\r\n            borderRadius:10,\r\n            // boxShadow:`0 3px 5px rgb(0 0 0 / 0.2)`,\r\n            cursor: 'pointer',\r\n            color:'primary'\r\n        }  \r\n    }\r\n));\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'white',\r\n    border: '0px solid #fff',\r\n    borderRadius:'10px',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\nexport const Multiple = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [accountNumber,setAccountNumber] = useState('');\r\n    const [accountName, setAccountName] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [bank,setBank] = useState([]);\r\n    const [receiver, setReceiver] = useState([]);\r\n\r\n    const [options,setOptions] = useState('');\r\n    // when group arrives\r\n    // const [group,setGroup] = useState();\r\n    const classes = styles();\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(state => state.reducer);\r\n    useEffect(() => {\r\n        if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n            return navigate('/');\r\n        }\r\n        async function getBanks () {\r\n             await axios.get('https://xmtapi.azurewebsites.net/Bank/get_banks')\r\n             .then(res =>setBank(res.data)).catch(err => console.log('error from get bank'));\r\n        }\r\n        getBanks();\r\n        \r\n    }, []);\r\n\r\n    // const handleGroupSelect = () => {\r\n    //     navigate(`/welcome/bankForm/${group}`);\r\n    // }\r\n    // const localTransferState = useSelector(state => state.transfer);\r\n    // console.log(localTransferState);\r\n\r\n    const handleSelect = (e) => {\r\n         setOptions(e.target.value);\r\n         if(accountNumber.length === 10) {\r\n            axios.post('https://xmtapi.azurewebsites.net/Transaction/find_account',{bank:e.target.value, accountNumber:accountNumber}).then(response => (setAccountName(response.data.customerName))).catch(err => console.error(err,'i caught the error'));\r\n            }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // dispatch\r\n        dispatch(detailAction(receiver));\r\n        navigate('/welcome/details');\r\n    }\r\n    const resetState = () => {\r\n        setAccountNumber('');\r\n        setAmount(0);\r\n        setOptions('');\r\n        setAccountName('')\r\n    }\r\n    const handleModal = () => {\r\n        if(accountNumber.length === 10 && options && accountName.length>0 && Number(amount) >= 0 && receiver.length+1 <= 10 ) {\r\n            console.log(receiver.length);\r\n            setReceiver(prevState => [...prevState,{transactionAmount: Number(amount),\r\n                receiverAccount:accountNumber,\r\n                narration:'',\r\n               bank:options}]);\r\n            handleClose();\r\n            resetState();\r\n            console.log(receiver);\r\n        }else   {\r\n            return handleClose();  \r\n        }\r\n    }\r\n    return (<div style = {{height:'100%'}}>\r\n        <Container>\r\n        <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 20, marginTop:100, fontSize:20}}>Multiple Transfer</Typography>\r\n        </Container>\r\n        <Container style =  {{marginTop:50, fontSize:20}} >\r\n            <Grid container direction = 'row' spacing={0} rowSpacing={5}>\r\n                <Grid  item md = {6} xs = {12} container  spacing = {3}>\r\n                        <Grid item xs ={12} md={12}>\r\n                            <div style ={{display: 'flex', alignItems:'center'}}>                                \r\n                                <Typography variant=\"body1\" style =  {{marginLeft: 20, fontSize:15}}> Recipients</Typography>\r\n                                <IconButton color = 'primary' disableRipple onClick={handleOpen}>\r\n                                    <AddIcon  color ='primary' />\r\n                                </IconButton>\r\n                            </div>\r\n                            <Modal\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"modal-modal-title\"\r\n                                aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Box sx={style}>\r\n                                    <Stack spacing = {2}>\r\n                                        <Typography variant ='em' >Note: <Typography variant ='em' style= {{color:'red'}}>Recipients should not be more than 10</Typography></Typography>\r\n                                        <TextField  variant= 'standard' label = 'Account Number' value = {accountNumber}  onChange = {e => setAccountNumber(e.target.value)}/>\r\n                                        <TextField variant= 'standard' label = 'Bank' id=\"standard-select-currency\"  select value = {options}  onChange = {handleSelect}>\r\n                                            {bank.map((val,key) => <MenuItem key={key} style = {{color:'white'}}  value = {val}> {val}</MenuItem>)}\r\n                                        </TextField>\r\n                                        <TextField  variant= 'standard' label = 'Amount' value = {amount} style = {{color:'white'}} onChange = {e => setAmount(e.target.value)} onBlur = {e => setAmount(e.target.value)}/>\r\n                                        <TextField  variant= 'standard' label = 'Account Name' value = {accountName} />\r\n                                        <Button variant = 'contained' color = 'primary' disableRipple onClick = {handleModal}>Add</Button>\r\n                                    </Stack>\r\n                                </Box>\r\n                            </Modal> \r\n                        </Grid>\r\n                        {!receiver.length && <Grid item xs ={12} md = {12} >\r\n                            <Typography variant = 'h6' style =  {{marginLeft: 20, fontSize:12}} >No items yet</Typography>\r\n                        </Grid>}\r\n                        {receiver.map( (val,key) => <Grid item xs ={12} md = {12} key= {key} >\r\n                                <div style = {{boxShadow:'2px 2px 2px 0.5'}}>\r\n                                    <Typography variant = 'body1' color = 'primary' style =  {{marginLeft: 20, fontSize:15}}>{val.receiverAccount}</Typography>\r\n                                    <Typography variant = 'h6' style =  {{marginLeft: 20, fontSize:12}}>{val.bank} |   N{val.transactionAmount}</Typography>\r\n                                </div>\r\n                        </Grid>)}\r\n                        {(receiver.length >= 2 && receiver.length <= 10) && <Grid item xs ={12} md = {12} >\r\n                            <Button color = 'primary' variant = 'contained' disableRipple style =  {{marginLeft: 20}} endIcon={< ArrowRightAltIcon/>} onClick = {handleSubmit}>Proceed</Button>\r\n                        </Grid>}\r\n                        {/* {!localTransferState && <Grid item>\r\n                             <Typography variant=\"h6\" style =  {{marginLeft: 20, fontSize:13}}>No Group yet</Typography>\r\n                        </Grid>}\r\n                        {localTransferState && localTransferState.map((val,key) =><Grid item key={key} className={classes.groups} onClick = {handleGroupSelect}>\r\n                             <Typography color = 'primary' variant=\"h6\" style ={{marginLeft: 20, fontSize:13}}>{val.group}  ({val.receiver}/10)</Typography>\r\n                        </Grid>)} */}\r\n                </Grid>\r\n                <Grid item md ={6} xs ={12} >\r\n                <Grid container direction='column' spacing = {3}>\r\n                    <Grid item>\r\n                            <Typography variant=\"body1\" style =  {{marginLeft: 20, fontSize:15}}>Groups</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                            <Typography variant=\"h6\" style =  {{marginLeft: 20, fontSize:12, marginTop:15}}>No group yet</Typography>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </div>);\r\n};","C:\\Users\\support\\Desktop\\xtm\\src\\redux\\action\\transAction.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\saga\\tranSaga.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\saga\\detailSaga.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Reusable.js",[],["163","164"],"C:\\Users\\support\\Desktop\\xtm\\src\\redux\\reducer\\transReducer.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\transResult.js",["165","166"],"import Container from '@mui/material/Container';\r\nimport { useState } from 'react';\r\nimport {Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport {useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport background from '../../assets/Jemeelah2-1.svg';\r\n\r\n\r\n\r\nexport const Result = () => {\r\n    const {placeholder} = useParams();\r\n    const navigate = useNavigate();\r\n    console.log(placeholder);\r\n    let success = placeholder.split(' ');\r\n    console.log(success[2]);\r\n    const handleClick  = () => {\r\n        navigate(-1);\r\n    }\r\n    const user = useSelector(state => state.reducer);\r\n    \r\n    useEffect(() => {\r\n        if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n            return navigate('/');\r\n        }\r\n        \r\n    }, []);\r\n    return <>\r\n            <div\r\n                style = {{backgroundImage:`url(${background})`,\r\n                height:'100vh',\r\n                width:'100%',\r\n                overflowX:'hidden',\r\n                backgroundPosition:'center',\r\n                backgroundSize:'cover',\r\n                    }}\r\n            >\r\n\r\n            <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:100, fontSize:20}}>Transfer Details</Typography>\r\n            </Container>\r\n            {placeholder && success.includes('successfully') && <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:50, fontSize:20}}>Dear Customer your transaction was processed {success[2]}</Typography>\r\n                    <div  color ='primary' style =  {{marginLeft: 90, marginTop:50, fontSize:20}}><Typography component = {Link} to = '/welcome/history'>View history</Typography></div> \r\n                    <Button variant = 'outlined' color = 'primary' component = {Link} to = '/welcome' style =  {{marginLeft: 90, marginTop:30, textTransform:'none'}}> Go back</Button>\r\n            </Container>}\r\n            { placeholder && !success.includes('successfully') && <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:50, fontSize:20}}>Dear Customer your transaction was unsuccessful.</Typography>\r\n                    <Button variant = 'outlined' color = 'primary' onClick  = {handleClick} style =  {{marginLeft: 90, marginTop:30}}> Go back</Button>\r\n            </Container>}\r\n        </div>\r\n    </>\r\n}","C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\transHistory.js",["167","168"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Container from '@mui/material/Container';\r\nimport {Typography } from '@mui/material';\r\n// import { Button } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport CircularIndeterminate from \"../UI/Spinner\";\r\n// import background from '../../assets/Jemeelah2-1.svg';\r\n// import Paginations from \"../UI/Pagination\";\r\n\r\nexport const History = () => {\r\n    const [data, setData ] = useState([]);\r\n    const user = useSelector(state => state.reducer[0]);\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    // const [postsPerPage] = useState(20);\r\n\r\n     \r\n    const navigate = useNavigate();\r\n    console.log(user);\r\n\r\n    useEffect(() => {\r\n        \r\n    if( window.location.pathname ==='/welcome/multiple' && user.length  === 0 )    {\r\n        return navigate('/');\r\n    }\r\n    async  function getData () {\r\n        let getTransactionDetails = await axios.get(`https://xmtapi.azurewebsites.net/Transaction/get-transaction-groups/${user.accountNumber}`).then(response => setData(response.data)).catch(err => console.log(err, 'error caught during post of account number '));\r\n        console.log(getTransactionDetails);\r\n        console.log(data);\r\n    }\r\n    getData();\r\n\r\n    }, []);\r\n\r\n    // if (data.length === 0)   {\r\n    //     return (<div style ={{position:'absolute', top:'50%', left:'50%'}}>\r\n    //             <CircularIndeterminate/>\r\n    //         </div>);\r\n    // }\r\n    const dateTime = (params) => {\r\n        let arr =  params.split('T');\r\n        let arr2 = arr[1].split('.');\r\n        let time = '';\r\n        let conv = arr2[0].split(':')\r\n        if(conv[0] < 12)  {\r\n            time = 'AM';\r\n        }else {\r\n            time = 'PM';\r\n        }\r\n        return `${arr[0]}  ${arr2[0]} ${time}`;\r\n    }\r\n     const rows = []\r\n    function Post (posts) {\r\n        console.log(posts, 'this is your data');\r\n            for(let i = 0; i <= posts.length-1; i++) {\r\n                for (let j = 0; j <= posts[i].transactions.length-1; j++) {\r\n                      let row =(<TableRow\r\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        key = {posts[i].transactions[j].transactionId}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {posts[i].transactions[j].bank}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{posts[i].transactions[j].receiverAccount}</TableCell>\r\n                            <TableCell align=\"left\">{posts[i].transactions[j].transactionAmount}</TableCell>\r\n                            <TableCell align=\"left\">{dateTime(posts[i].transactions[j].transactionDate)}</TableCell>\r\n                            <TableCell align=\"left\">{posts[i].transactionGroupName}</TableCell>\r\n                            \r\n                           <TableCell align=\"left\">{(posts[i].transactions[j].transactionId)}</TableCell>\r\n                        </TableRow>);\r\n                        rows.push(row)\r\n                }\r\n            }\r\n            return rows.map(val => val);\r\n    }\r\n    // const indexOfLastPost = currentPage * postsPerPage;\r\n    // const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    // const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n    // const paginate = pageNumber => setCurrentPage(pageNumber + 1);\r\n    return (<>\r\n            {/* <div\r\n                    style = {{backgroundImage:`url(${background})`,\r\n                    height:'100vh',\r\n                    width:'100%',\r\n                    overflowX:'hidden',\r\n                    backgroundPosition:'center',\r\n                    backgroundSize:'cover',\r\n                    }}> */}\r\n            <Container>\r\n                    <Typography variant=\"body1\" color ='primary' style =  {{marginLeft: 90, marginTop:100, fontSize:20}}>Transfer Details</Typography>\r\n            </Container>\r\n            <Container>\r\n                    <TableContainer style =  {{marginLeft: 100, marginTop:50}} >\r\n                        <Table sx={{ width: '1000px' }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Bank</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Amount</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Group</TableCell>\r\n                                    <TableCell>Ref ID</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                             <TableBody>\r\n                                 {Post(data)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n                <Container style = {{display:'flex', justifyContent:'center', margin:20}}>\r\n                    {/* <Paginations  style =  {{marginLeft: 90, marginTop:100, fontSize:20}} postsPerPage={postsPerPage} totalPosts={data.length} paginate = {paginate} /> */}\r\n            </Container>\r\n            {/* </div> */}\r\n        </>);\r\n}\r\n\r\n\r\n","C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\Spinner.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\bubble.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\Particle.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\nestedRoutes\\ParticleConfig.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\components\\UI\\Pagination.js",[],"C:\\Users\\support\\Desktop\\xtm\\src\\CreateAccount.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":13},{"ruleId":"173","severity":1,"message":"177","line":23,"column":24,"nodeType":"175","messageId":"176","endLine":23,"endColumn":43},{"ruleId":"173","severity":1,"message":"178","line":24,"column":23,"nodeType":"175","messageId":"176","endLine":24,"endColumn":41},{"ruleId":"173","severity":1,"message":"179","line":72,"column":11,"nodeType":"175","messageId":"176","endLine":72,"endColumn":29},{"ruleId":"173","severity":1,"message":"180","line":73,"column":11,"nodeType":"175","messageId":"176","endLine":73,"endColumn":23},{"ruleId":"169","replacedBy":"181"},{"ruleId":"171","replacedBy":"182"},{"ruleId":"173","severity":1,"message":"183","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":12},{"ruleId":"173","severity":1,"message":"184","line":53,"column":17,"nodeType":"175","messageId":"176","endLine":53,"endColumn":25},{"ruleId":"173","severity":1,"message":"185","line":33,"column":12,"nodeType":"175","messageId":"176","endLine":33,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":127,"column":8,"nodeType":"188","endLine":127,"endColumn":10,"suggestions":"189"},{"ruleId":"173","severity":1,"message":"190","line":39,"column":12,"nodeType":"175","messageId":"176","endLine":39,"endColumn":17},{"ruleId":"186","severity":1,"message":"191","line":62,"column":8,"nodeType":"188","endLine":62,"endColumn":10,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"191","line":55,"column":8,"nodeType":"188","endLine":55,"endColumn":10,"suggestions":"193"},{"ruleId":"173","severity":1,"message":"194","line":66,"column":11,"nodeType":"175","messageId":"176","endLine":66,"endColumn":18},{"ruleId":"186","severity":1,"message":"191","line":81,"column":8,"nodeType":"188","endLine":81,"endColumn":10,"suggestions":"195"},{"ruleId":"169","replacedBy":"196"},{"ruleId":"171","replacedBy":"197"},{"ruleId":"173","severity":1,"message":"198","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"191","line":31,"column":8,"nodeType":"188","endLine":31,"endColumn":10,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"200","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":29},{"ruleId":"186","severity":1,"message":"201","line":41,"column":8,"nodeType":"188","endLine":41,"endColumn":10,"suggestions":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'detailActionSuccess' is defined but never used.","'createGroupSuccess' is defined but never used.","'localTransferState' is assigned a value but never used.","'groupDetails' is assigned a value but never used.",["203"],["204"],"'Tilt' is defined but never used.","'response' is assigned a value but never used.","'groups' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayForms', 'groupDetails', 'navigate', 'placeholder', and 'user.length'. Either include them or remove the dependency array.","ArrayExpression",["205"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'user.length'. Either include them or remove the dependency array.",["206"],["207"],"'classes' is assigned a value but never used.",["208"],["203"],["204"],"'useState' is defined but never used.",["209"],"'CircularIndeterminate' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'navigate', 'user.accountNumber', and 'user.length'. Either include them or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"213","fix":"216"},{"desc":"213","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [displayForms, groupDetails, navigate, placeholder, user.length]",{"range":"220","text":"221"},"Update the dependencies array to be: [navigate, user.length]",{"range":"222","text":"223"},{"range":"224","text":"223"},{"range":"225","text":"223"},{"range":"226","text":"223"},"Update the dependencies array to be: [data, navigate, user.accountNumber, user.length]",{"range":"227","text":"228"},[5493,5495],"[displayForms, groupDetails, navigate, placeholder, user.length]",[2038,2040],"[navigate, user.length]",[1614,1616],[2771,2773],[956,958],[1636,1638],"[data, navigate, user.accountNumber, user.length]"]