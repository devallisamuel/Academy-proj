{"version":3,"file":"index.js","sources":["../src/useVH.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nconst VARIABLE_NAME = '--vh';\n\nconst getActualVh = () =>\n  // window check for server-side rendering\n  typeof window !== 'undefined'\n    ? Number((window.innerHeight * 0.01).toFixed(2))\n    : 0;\n\nlet count = 0;\n\nconst useVH = (): number => {\n  const [vh, setVh] = useState(getActualVh());\n  const updateVh = useCallback(() => {\n    const newVh = getActualVh();\n\n    document.documentElement.style.setProperty(VARIABLE_NAME, `${newVh}px`);\n    setVh(newVh);\n  }, [setVh]);\n\n  useEffect(() => {\n    count += 1;\n\n    updateVh();\n\n    window.addEventListener('resize', updateVh);\n\n    return () => {\n      window.removeEventListener('resize', updateVh);\n\n      count -= 1;\n\n      if (count === 0)\n        document.documentElement.style.removeProperty(VARIABLE_NAME);\n    };\n  }, [updateVh]);\n\n  return vh;\n};\n\nexport default useVH;\n"],"names":["getActualVh","window","Number","innerHeight","toFixed","count","useState","vh","setVh","updateVh","useCallback","newVh","document","documentElement","style","setProperty","useEffect","addEventListener","removeEventListener","removeProperty"],"mappings":"uBAIMA,EAAc,iBAEA,oBAAXC,OACHC,QAA6B,IAArBD,OAAOE,aAAoBC,QAAQ,IAC3C,GAEFC,EAAQ,iBAEE,iBACQC,WAASN,KAAtBO,OAAIC,OACLC,EAAWC,cAAY,WAC3B,IAAMC,EAAQX,IAEdY,SAASC,gBAAgBC,MAAMC,YAfb,OAe2CJ,QAC7DH,EAAMG,IACL,CAACH,IAmBJ,OAjBAQ,YAAU,WAOR,OANAX,GAAS,EAETI,IAEAR,OAAOgB,iBAAiB,SAAUR,cAGhCR,OAAOiB,oBAAoB,SAAUT,GAIvB,IAFdJ,GAAS,IAGPO,SAASC,gBAAgBC,MAAMK,eAhCjB,UAkCjB,CAACV,IAEGF"}